name: 🎉 First-Time Contributor Welcome

on:
  pull_request_target:
    types: [opened]
  issues:
    types: [opened]

jobs:
  welcome:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: 👋 Welcome new contributors
      if: github.event_name == 'pull_request_target'
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const prNumber = context.payload.pull_request.number;
          const prAuthor = context.payload.pull_request.user.login;

          // Check if this is their first contribution
          const { data: userPRs } = await github.rest.search.issuesAndPullRequests({
            q: `author:${prAuthor} repo:${owner}/${repo} type:pr`,
            per_page: 2
          });

          const isFirstTime = userPRs.items.length === 1;

          if (isFirstTime) {
            const welcomeMessage = [
              '🎉 **Welcome to Hacktoberfest!** @' + prAuthor,
              '',
              'Thank you for your first contribution to our interactive project! 🚀',
              '',
              '## 🌟 What happens next:',
              '1. **Automated Testing**: Our CI will test your code automatically',
              '2. **Review Process**: A maintainer will review your contribution',
              '3. **Badge Generation**: You\'ll earn achievement badges for your work',
              '4. **Community Recognition**: Your profile will be featured in our contributors gallery',
              '',
              '## 📚 Resources for new contributors:',
              '- 📖 [Contribution Guide](docs/guides/CONTRIBUTING.md)',
              '- 🛠️ [Setup Instructions](docs/guides/SETUP.md)',
              '- 💬 [Join our Discord](https://discord.gg/hacktoberfest)',
              '- 🏆 [Achievement System](docs/guides/ACHIEVEMENTS.md)',
              '',
              '## 🎯 Quick Tips:',
              '- Make sure your code follows our style guidelines',
              '- Test your changes locally before submitting',
              '- Be patient during review - we\'re all volunteers! 😊',
              '',
              'Keep coding and welcome to the open source community! 🌍'
            ].join('\n');

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: prNumber,
              body: welcomeMessage
            });
          }

    - name: 🏷️ Add contribution labels
      if: github.event_name == 'pull_request_target'
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const prNumber = context.payload.pull_request.number;
          const prFiles = context.payload.pull_request.changed_files;

          const labels = [];

          // Determine contribution type based on files changed
          if (prFiles.some(file => file.filename.startsWith('profiles/'))) {
            labels.push('profile');
          }
          if (prFiles.some(file => file.filename.startsWith('challenges/'))) {
            labels.push('challenge');
          }
          if (prFiles.some(file => file.filename.startsWith('projects/'))) {
            labels.push('project');
          }
          if (prFiles.some(file => file.filename.startsWith('scripts/'))) {
            labels.push('script');
          }

          // Add difficulty level
          const prTitle = context.payload.pull_request.title.toLowerCase();
          if (prTitle.includes('beginner') || prFiles.some(file => file.filename.includes('beginner'))) {
            labels.push('beginner-friendly');
          }
          if (prTitle.includes('intermediate') || prFiles.some(file => file.filename.includes('intermediate'))) {
            labels.push('intermediate');
          }
          if (prTitle.includes('advanced') || prFiles.some(file => file.filename.includes('advanced'))) {
            labels.push('advanced');
          }

          if (labels.length > 0) {
            await github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: prNumber,
              labels
            });
          }

  issue-welcome:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues'

    steps:
    - name: 💬 Welcome issue creators
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const issueNumber = context.payload.issue.number;
          const issueAuthor = context.payload.issue.user.login;
          const issueTitle = context.payload.issue.title;

          const issueWelcomeMessage = [
            '👋 **Thanks for opening an issue!** @' + issueAuthor,
            '',
            'We appreciate you taking the time to report this and help improve our project! 🐛',
            '',
            '## 📋 Issue Details:',
            '**Title**: ' + issueTitle,
            '**Type**: ' + (context.payload.issue.labels?.map(l => l.name).join(', ') || 'Not labeled yet'),
            '',
            '## 🔄 Next Steps:',
            '- A maintainer will review your issue shortly',
            '- We\'ll add appropriate labels and assign it to the right person',
            '- You might be asked for more details if needed',
            '',
            '## 💡 Pro Tip:',
            'If this is a bug report, please include:',
            '- Steps to reproduce',
            '- Expected vs actual behavior',
            '- Your environment (OS, browser, etc.)',
            '',
            'If it\'s a feature request, feel free to include:',
            '- Why you think this would be valuable',
            '- How it would work',
            '- Any mockups or examples',
            '',
            'Thanks again for contributing to our interactive Hacktoberfest project! 🎃'
          ].join('\n');

          await github.rest.issues.createComment({
            owner,
            repo,
            issue_number: issueNumber,
            body: issueWelcomeMessage
          });